{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAQC,OAAOH,EAAII,cAAcC,MAAMC,OAC3C,MAAMC,EAAOJ,OAAOH,EAAII,cAAcG,KAAKD,OACrCE,EAASL,OAAOH,EAAII,cAAcI,OAAOF,OAG/C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDC,cAAcD,EAAUP,GAAOS,MAAK,EAACC,SAAEA,EAAQP,MAAEA,MAC7CV,EAAAkB,OAAOC,QAAQ,qBAAqBF,QAAeP,UACpDU,OAAM,EAACH,SAAEA,EAAQP,MAAEA,MAClBV,EAAAkB,OAAOG,QAAQ,oBAAoBJ,QAAeP,UAEtDH,GAASK","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventdefault();\n\n  let delay = Number(evt.currentTarget.delay.value);  \n  const step = Number(evt.currentTarget.step.value);  \n  const amount = Number(evt.currentTarget.amount.value);\n  \n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay).then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n    }).catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n    })\n    delay += step;\n    };\n  \n\n\n//   const createPromise = (position, delay) => {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       }\n//       reject({ position, delay });\n//     }, delay);\n//   });\n// \n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","evt","preventdefault","delay1","Number","currentTarget","delay","value","step","amount","position1","createPromise","then","position","Notify","success","catch","failure"],"version":3,"file":"03-promises.b6b017c6.js.map"}